<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lifeservice.dao.UserMapper">
    <cache readOnly="true"/>
    
	<resultMap id="BaseResultMap" type="com.lifeservice.model.UserInfo">
		<id column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="userPassword" property="userPassword" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="realName" property="realName" jdbcType="VARCHAR" />
		<result column="needs" property="needs" jdbcType="VARCHAR" />
		<result column="provide" property="provide" jdbcType="VARCHAR" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="memo" property="memo" jdbcType="VARCHAR" />
		<result column="last_logintime" property="lastLoginTime" jdbcType="DATE" />
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>

<!-- 	<resultMap type="com.lifeservice.model.User" id="UserWithBooks" -->
<!-- 		extends="BaseResultMap"> -->
<!-- 		<collection property="books" ofType="com.lifeservice.model.Book"> -->
<!-- 			<id column="book_id" property="id" jdbcType="INTEGER" /> -->
<!-- 		    <result column="book_name" property="name" jdbcType="VARCHAR" /> -->
<!-- 		    <result column="book_price" property="price" jdbcType="DECIMAL" /> -->
<!-- 		</collection> -->
<!-- 	</resultMap> -->

	<sql id="Base_Column_List">
		userId, userName, userPassword, phone, realName, needs, provide, province, city, memo ,last_logintime , count
	</sql>
	<select id="selectByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String" useCache="false">
		select
		<include refid="Base_Column_List" />
		from userinfo
		where userName = #{userName,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer" useCache="false">
		select
		<include refid="Base_Column_List" />
		from userinfo
		where userId = #{userId,jdbcType=INTEGER}
	</select>
	
	<insert id="insert" parameterType="com.lifeservice.model.UserInfo" useGeneratedKeys="true" keyProperty="id">
		insert into userinfo (userName, userPassword, phone, realName, needs, provide, province, city, memo ,last_logintime ,count)
		values (#{userName,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR},
		#{needs,jdbcType=VARCHAR},
		#{provide,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR},
		now(),
		#{count,jdbcType=INTEGER})
	</insert>
	
	<update id="updateUser" >
		update userinfo
		<set>
<!-- 			<if test="username != null"> -->
<!-- 				username = #{username,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="password != null"> -->
<!-- 				password = #{password,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="age != null"> -->
<!-- 				age = #{age,jdbcType=INTEGER}, -->
<!-- 			</if> -->
				${key} = #{value}
		</set>
		where userId = #{userId}
	</update>
	
	<select id="selectByPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String" useCache="false">
		select
		<include refid="Base_Column_List" />
		from userinfo
		where phone = #{phone,jdbcType=VARCHAR}
	</select>
	
<!-- 	<insert id="insertSelective" parameterType="com.lifeservice.model.User"> -->
<!-- 		insert into user -->
<!-- 		<trim prefix="(" suffix=")" suffixOverrides=","> -->
<!-- 			<if test="id != null"> -->
<!-- 				id, -->
<!-- 			</if> -->
<!-- 			<if test="username != null"> -->
<!-- 				username, -->
<!-- 			</if> -->
<!-- 			<if test="password != null"> -->
<!-- 				password, -->
<!-- 			</if> -->
<!-- 			<if test="age != null"> -->
<!-- 				age, -->
<!-- 			</if> -->
<!-- 		</trim> -->
<!-- 		<trim prefix="values (" suffix=")" suffixOverrides=","> -->
<!-- 			<if test="id != null"> -->
<!-- 				#{id,jdbcType=INTEGER}, -->
<!-- 			</if> -->
<!-- 			<if test="username != null"> -->
<!-- 				#{username,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="password != null"> -->
<!-- 				#{password,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="age != null"> -->
<!-- 				#{age,jdbcType=INTEGER}, -->
<!-- 			</if> -->
<!-- 		</trim> -->
<!-- 	</insert> -->
<!-- 	<update id="updateByPrimaryKeySelective" parameterType="com.lifeservice.model.User"> -->
<!-- 		update user -->
<!-- 		<set> -->
<!-- 			<if test="username != null"> -->
<!-- 				username = #{username,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="password != null"> -->
<!-- 				password = #{password,jdbcType=VARCHAR}, -->
<!-- 			</if> -->
<!-- 			<if test="age != null"> -->
<!-- 				age = #{age,jdbcType=INTEGER}, -->
<!-- 			</if> -->
<!-- 		</set> -->
<!-- 		where id = #{id,jdbcType=INTEGER} -->
<!-- 	</update> -->
<!-- 	<update id="updateByPrimaryKey" parameterType="com.lifeservice.model.User"> -->
<!-- 		update user -->
<!-- 		set username = #{username,jdbcType=VARCHAR}, -->
<!-- 		password = #{password,jdbcType=VARCHAR}, -->
<!-- 		age = #{age,jdbcType=INTEGER} -->
<!-- 		where id = #{id,jdbcType=INTEGER} -->
<!-- 	</update> -->

<!-- 	<select id="getAll" resultMap="UserWithBooks"> -->
<!-- 		select -->
<!-- 		u.id as id, -->
<!-- 		u.username as username, -->
<!-- 		u.password as password, -->
<!-- 		u.age as age, -->
<!-- 		b.id as book_id, -->
<!-- 		b.name as book_name, -->
<!-- 		b.price as book_price -->
<!-- 		from -->
<!-- 		user u -->
<!-- 		left join userbook ub on u.id = ub.user_id -->
<!-- 		left join book b on ub.book_id = b.id  -->
<!-- 	</select> -->
</mapper>